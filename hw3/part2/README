Md5 was once the most widely used crytp hash function, but today it is
considered dangerously insecure. Cryptanalysts have discovered efficient
algorithms for finding collision. The first know collisions were announced on
Aug-17-2004. MD5 processes messages in 512-bit blocks.  

Steps:

1. Build the fastcoll tool
2. Generate your own collision with `fastcoll prefix`
   You will get two files md5_data1, md5_data2
3. Check the md5 of both the files, it should be same.
4. Check their sha256 hash, it should be different.

The idea of the Collision attack is
Assume (||) is the concatenate operator:

msg1 :=> prefix || blob1 || suffix
msg2 :=> prefix || blob2 || suffix

Since,
	md5_data1 = prefix || blob1
	md5_data2 = prefix || blob2

	md5(prefix || blob1) == md5(prefix || blob2) // generated by the fastcoll program

	We create 
	msg1 by : 
	$ cat md5_data1 suffix > file1.py
	msg2 by :
	$ cat md5_data2 suffix > file2.py


Verify, both file1.py & file2.py have same md5 hash, but differ in sha.

Try to use, all this and create two programs `file1.py` & `file2.py` that have same md5 but have different output.

Hint: you might want to use if/else on some condtion. Think ...

